<?php

namespace altyyasha_bot\command;

use altyyasha_bot\core\DB;
use Telegram;

class Message
{
    private Telegram $telegram;
    private int $chat_id;
    private int $message_id = 0;
    private DB $db;
    const EMOJI_ICON = 'üôÉ  ';

    public function __construct($telegram)
    {
        $this->telegram = $telegram;
        $this->chat_id = $this->telegram->ChatID();
        $this->db = new DB();
    }

    public function __debugInfo()
    {
        return [
          'message_id' => $this->message_id,
        ];
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
     * @param  array  $data
     */
    public function send(array $data)
    {
        if (isset($data['chat_id'])) {
            $answer['chat_id'] = $data['chat_id'];
        }

        if (empty($answer['chat_id'])) {
            $answer['chat_id'] = $this->chat_id;
        }

        if (isset($data['reply_markup'])) {
            $answer['reply_markup'] = $data['reply_markup'];
        }

        if (isset($data['text'])) {
            $answer['text'] = fix_breaks($data['text']);
        }

        $this->telegram->sendMessage($answer);
    }

    public function edit()
    {
        $this->send(
          [
            'text' => 'üòà –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑–º–µ–Ω–∏—Ç—å —É–∂–µ –Ω–µ–ª—å–∑—è!'
          ]
        );
    }

    public function addImage()
    {
        $this->send(
          [
            'text' => '–ö–∞—Ä—Ç–∏–Ω–∫–∞? –¢—ã —Å–µ—Ä—å—ë–∑–Ω–æ? ü§£ü§£ü§£'
          ]
        );
    }

    public function add()
    {
        if (!in_array($this->telegram->getUpdateType(), ['message', 'reply_to_message'])) {
            (new Error($this->telegram))->send('ü•≤ –Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç—Ç–∏–º —Ç–∏–ø–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π.');
            return;
        }
        $count_answer = $this->db->getMessagesToday($this->chat_id);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –±–æ–ª—å—à–µ MAX_NUM_ATTEMPTS_PER_DAY
        if ($_ENV['MAX_NUM_ATTEMPTS_PER_DAY'] < $count_answer) {
            $this->send(
              [
                'text' => '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥–∞—Ç—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!'.random_reaction()
                  .PHP_EOL.'–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞) üòá'
              ]
            );
            return;
        }

        // —Å–æ—Ö—Ä–∞–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
        $this->db->addMessage(
          [
            'chat_id' => $this->chat_id,
            'text' => $this->telegram->Text(),
            'message_id' => $this->telegram->MessageID(),
          ]
        );

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        $answer = $this->db->getRightAnswer();


        // –û—Ç–ø—Ä–∞–≤–∏–º –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ç–æ —É –Ω–∞—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å!
        if ($answer['status'] == 0) {
            $this->send(
              [
                'text' => 'ü•≥–£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å! ü•≥'.random_reaction()
                  .PHP_EOL.'–≠—Ç–æ: '.$answer['winner']
              ]
            );
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        if ($answer['text'] == ltrim(rtrim(mb_strtolower($this->telegram->Text())))) {
            $this->send(
              [
                'text' => 'ü•≥Ô∏è‚ù§ü•≥Ô∏è–£–≥–∞–¥–∞–ª–∞ !!!ü•≥Ô∏è‚ù§Ô∏èü•≥'
              ]
            );

            $this->db->endRightAnswer($this->db->getNameByChatHistory($this->chat_id));
        } else {
            $phrases_messages = $this->db->getPhrasesMessagesPrepared();

            $num_attempts = $_ENV['MAX_NUM_ATTEMPTS_PER_DAY'] - $count_answer - 1;
            $string_attempts = rus_ending($num_attempts, '–ø–æ–ø—ã—Ç–∫–∞', '–ø–æ–ø—ã—Ç–∫–∏', '–ø–æ–ø—ã—Ç–æ–∫');

            $this->send(
              [
                'text' => $phrases_messages.' '.random_reaction()
                  .PHP_EOL.PHP_EOL.' –û—Å—Ç–∞–ª–æ—Å—å '.$num_attempts.' '.$string_attempts.' –Ω–∞ —Å–µ–≥–æ–¥–Ω—è '.random_reaction()
              ]
            );
        }
    }
}
